{"version":3,"file":"WaveChart.story-63b32de4.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../src/components/WaveChart/WaveChart.tsx","../../src/components/WaveChart/SineWave.ts"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","import React, { useRef, useEffect } from 'react';\n\nimport { SineWave } from './SineWave';\n\nexport const WaveChart = (props: {\n  waves: SineWave[];\n  startFull?: boolean;\n  fullWidth?: boolean;\n  height?: number;\n  width?: number;\n  step?: number;\n}) => {\n  const { waves, startFull, fullWidth, height = 400, width, step = 4 } = props;\n\n  const canvasRef = useRef();\n  const frameRef = useRef(0);\n\n  function drawWaves(waves: SineWave[], context: CanvasRenderingContext2D, x: number, xOffset: number, step?: number) {\n    if (context.canvas.width != (fullWidth ? window.innerWidth : window.innerWidth * 0.8)) {\n      context.canvas.width = fullWidth ? window.innerWidth : window.innerWidth * 0.8;\n    }\n    context.clearRect(0, 0, context.canvas.width, context.canvas.height);\n    const yOffset = context.canvas.height / 2;\n    for (let i = waves.length - 1; i >= 0; i--) {\n      const wave = waves[i];\n      let currentX = 0,\n        currentY = yOffset;\n\n      context.strokeStyle = wave.color;\n      context.beginPath(); // Start a new path\n      context.moveTo(0, yOffset + wave.getYFromX(0 + xOffset, xOffset)); // Move the pen to (30, 50)\n\n      while (currentX < x - xOffset) {\n        //context.fillRect(currentX,yOffset+wave.getYFromX(currentX + xOffset)  ,1,1)\n        currentX += step ?? 4;\n        currentY = yOffset + wave.getYFromX(currentX + xOffset, xOffset);\n        context.lineTo(currentX, currentY);\n      }\n      context.stroke(); // Render the path\n    }\n\n    if (x < context.canvas.width) {\n      x += step ?? 4;\n\n      requestAnimationFrame(() => drawWaves(waves, context, x, xOffset));\n    } else {\n      x += 1;\n\n      xOffset = x - context.canvas.width;\n\n      frameRef.current = requestAnimationFrame(() => drawWaves(waves, context, x, xOffset));\n    }\n  }\n  useEffect(() => {\n    if (canvasRef.current) {\n      const canvas: HTMLCanvasElement = canvasRef.current;\n      canvas.width = width ? width : fullWidth ? window.innerWidth : window.innerWidth * 0.8;\n      const context = canvas.getContext('2d');\n      if (context) {\n        frameRef.current = requestAnimationFrame(() =>\n          drawWaves(\n            waves,\n            context,\n            startFull ? (width ? width : fullWidth ? window.innerWidth : window.innerWidth * 0.8) : 0,\n            0,\n            step,\n          ),\n        );\n      }\n    }\n\n    return () => cancelAnimationFrame(frameRef.current);\n  });\n\n  return <canvas ref={canvasRef} {...{ width }} height={height} />;\n};\n","export type WaveCharacteristicFunction = (x: number, xOffset: number) => number;\n\nexport class SineWave {\n  angularFrequency: WaveCharacteristicFunction;\n  amplitude: WaveCharacteristicFunction;\n  phase: WaveCharacteristicFunction;\n  color: string;\n  yOffset: WaveCharacteristicFunction;\n  constructor({\n    frequency,\n    amplitude,\n    phase,\n    color,\n    yOffset,\n  }: {\n    frequency: number | WaveCharacteristicFunction;\n    amplitude: number | WaveCharacteristicFunction;\n    phase: number | WaveCharacteristicFunction;\n    color: string;\n    yOffset: number | WaveCharacteristicFunction;\n  }) {\n    this.angularFrequency =\n      frequency instanceof Function\n        ? frequency\n        : () => {\n            return frequency * 2 * Math.PI;\n          };\n    this.amplitude = amplitude instanceof Function ? amplitude : () => amplitude;\n    this.phase = phase instanceof Function ? phase : () => phase;\n    this.color = color;\n    this.yOffset = yOffset instanceof Function ? yOffset : () => yOffset;\n  }\n  getYFromX(x: number, xOffset: number): number {\n    return this.amplitude(x, xOffset) * Math.sin(this.angularFrequency(x, xOffset) * x + this.phase(x, xOffset)) + this.yOffset(x, xOffset);\n  }\n}\n"],"names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","WaveChart","props","waves","startFull","fullWidth","height","width","step","canvasRef","useRef","frameRef","drawWaves","waves2","context","x","xOffset","step2","yOffset","i","wave","currentX","currentY","useEffect","canvas","jsx","SineWave","frequency","amplitude","phase","color"],"mappings":";;;;;;;;GASa,IAAIA,EAAEC,EAAiBC,EAAE,OAAO,IAAI,eAAe,EAAEC,EAAE,OAAO,IAAI,gBAAgB,EAAEC,EAAE,OAAO,UAAU,eAAeC,EAAEL,EAAE,mDAAmD,kBAAkBM,EAAE,CAAC,IAAI,GAAG,IAAI,GAAG,OAAO,GAAG,SAAS,EAAE,EAClP,SAASC,EAAEC,EAAEC,EAAEC,EAAE,CAAC,IAAIC,EAAEC,EAAE,GAAGC,EAAE,KAAKC,EAAE,KAAcJ,IAAT,SAAaG,EAAE,GAAGH,GAAYD,EAAE,MAAX,SAAiBI,EAAE,GAAGJ,EAAE,KAAcA,EAAE,MAAX,SAAiBK,EAAEL,EAAE,KAAK,IAAIE,KAAKF,EAAEL,EAAE,KAAKK,EAAEE,CAAC,GAAG,CAACL,EAAE,eAAeK,CAAC,IAAIC,EAAED,CAAC,EAAEF,EAAEE,CAAC,GAAG,GAAGH,GAAGA,EAAE,aAAa,IAAIG,KAAKF,EAAED,EAAE,aAAaC,EAAWG,EAAED,CAAC,IAAZ,SAAgBC,EAAED,CAAC,EAAEF,EAAEE,CAAC,GAAG,MAAM,CAAC,SAAST,EAAE,KAAKM,EAAE,IAAIK,EAAE,IAAIC,EAAE,MAAMF,EAAE,OAAOP,EAAE,OAAO,CAAC,YAAkBF,EAAaY,EAAA,IAACR,EAAEQ,EAAA,KAAaR,ECPxWS,EAAA,QAAiBf,gCCCZgB,EAAAC,GAAA,CAQL,KAAA,CAAA,MAAAC,EAAA,UAAAC,EAAA,UAAAC,EAAA,OAAAC,EAAA,IAAA,MAAAC,EAAA,KAAAC,EAAA,CAAA,EAAAN,EAEAO,EAAAC,EAAAA,SACAC,EAAAD,SAAA,CAAA,EAEA,SAAAE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,CACEH,EAAA,OAAA,QAAAT,EAAA,OAAA,WAAA,OAAA,WAAA,MACES,EAAA,OAAA,MAAAT,EAAA,OAAA,WAAA,OAAA,WAAA,IAEFS,EAAA,UAAA,EAAA,EAAAA,EAAA,OAAA,MAAAA,EAAA,OAAA,MAAA,EACA,MAAAI,EAAAJ,EAAA,OAAA,OAAA,EACA,QAAAK,EAAAN,EAAA,OAAA,EAAAM,GAAA,EAAAA,IAAA,CACE,MAAAC,EAAAP,EAAAM,CAAA,EACA,IAAAE,EAAA,EAAAC,EAAAJ,EAOA,IAJAJ,EAAA,YAAAM,EAAA,MACAN,EAAA,UAAA,EACAA,EAAA,OAAA,EAAAI,EAAAE,EAAA,UAAA,EAAAJ,EAAAA,CAAA,CAAA,EAEAK,EAAAN,EAAAC,GAEEK,GAAAJ,GAAA,EACAK,EAAAJ,EAAAE,EAAA,UAAAC,EAAAL,EAAAA,CAAA,EACAF,EAAA,OAAAO,EAAAC,CAAA,EAEFR,EAAA,OAAA,CAAe,CAGjBC,EAAAD,EAAA,OAAA,OACEC,GAAAE,GAAA,EAEA,sBAAA,IAAAL,EAAAC,EAAAC,EAAAC,EAAAC,CAAA,CAAA,IAEAD,GAAA,EAEAC,EAAAD,EAAAD,EAAA,OAAA,MAEAH,EAAA,QAAA,sBAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,CAAA,CAAA,EACF,CAEFO,OAAAA,EAAAA,UAAA,IAAA,CACE,GAAAd,EAAA,QAAA,CACE,MAAAe,EAAAf,EAAA,QACAe,EAAA,MAAAjB,IAAAF,EAAA,OAAA,WAAA,OAAA,WAAA,IACA,MAAAS,EAAAU,EAAA,WAAA,IAAA,EACAV,IACEH,EAAA,QAAA,sBAAmB,IAAAC,EACjBT,EACEW,EACAV,EAAAG,IAAAF,EAAA,OAAA,WAAA,OAAA,WAAA,IAAA,EACwF,EACxFG,CACA,CACF,EAEJ,CAGF,MAAA,IAAA,qBAAAG,EAAA,OAAA,CAAkD,CAAA,EAGpDc,EAAA,SAAA,CAAA,IAAAhB,EAAA,MAAAF,EAAA,OAAAD,CAAA,CAAA,CACF,uoBCzEO,MAAMoB,CAAS,CAMpB,YAAY,CACV,UAAAC,EACA,UAAAC,EACA,MAAAC,EACA,MAAAC,EACA,QAAAZ,CAAA,EAOC,CACD,KAAK,iBACHS,aAAqB,SACjBA,EACA,IACSA,EAAY,EAAI,KAAK,GAEpC,KAAK,UAAYC,aAAqB,SAAWA,EAAY,IAAMA,EACnE,KAAK,MAAQC,aAAiB,SAAWA,EAAQ,IAAMA,EACvD,KAAK,MAAQC,EACb,KAAK,QAAUZ,aAAmB,SAAWA,EAAU,IAAMA,CAC/D,CACA,UAAUH,EAAWC,EAAyB,CACrC,OAAA,KAAK,UAAUD,EAAGC,CAAO,EAAI,KAAK,IAAI,KAAK,iBAAiBD,EAAGC,CAAO,EAAID,EAAI,KAAK,MAAMA,EAAGC,CAAO,CAAC,EAAI,KAAK,QAAQD,EAAGC,CAAO,CACxI,CACF;;;;;;;;;;;;;;;;;","x_google_ignoreList":[0,1]}